<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 
<mapper namespace="cn.userCenter.dao.UserRoleMapper">
	<sql id="userRoleFiled">
		(name, state, note, remark1, remark2)
	</sql>


	<!-- ===========================1、查询===============================  -->
	
	<!-- 1.1、根据用户角色id查询用户角色信息 -->
	<select id="findUserRoleById" parameterType="int" resultType="cn.zg.springcloud.entities.userCenter.UserRole">
		select * from user_role
		where rolid = { #rolid }
	</select>
	
	<!-- 1.2、根据用户id查询用户角色信息 -->
	<select id="findUserRoleByUserId" parameterType="int" resultType="list">
		select * 
		from user_organization o left join user_role_relation ur on o.orgid = ur.userid
								left join user_role r on ur.rolid = r.rolid
		where o.orgid = #{userId}
	</select>
	
	
	
	
	
	<!-- ===========================2、新增===============================  -->
	
	<!-- 2.1、增加用户角色信息 -->
	<insert id="saveUserRole" parameterType="cn.zg.springcloud.entities.userCenter.UserRole">
		insert into user_role
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="userRole.name != null and '' != userRole.name ">
				name,
			</if>
			<if test="userRole.state != null">
				state,
			</if>
			<if test="userRole.note != null">
				note,
			</if>
			<if test="userRole.remark1 != null">
				remark1,
			</if>
			<if test="userRole.remark2 != null">
				remark2
			</if>
		</trim>
		values
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="userRole.name != null and '' != userRole.name ">
				#{userRole.name,jdbcType=VARCHAR},
			</if>
			<if test="userRole.state != null">
				#{userRole.state,jdbcType=INTEGER},
			</if>
			<if test="userRole.note != null">
				#{userRole.note,jdbcType=VARCHAR},
			</if>
			<if test="userRole.remark1 != null">
				#{userRole.remark1,jdbcType=INTEGER},
			</if>
			<if test="userRole.remark2 != null">
				#{userRole.remark2,jdbcType=VARCHAR}
			</if>
		</trim>
	</insert>
	
	<!-- 2.2、批量增加用户角色信息 --><!-- 对象以下属性值不能为null -->
	<insert id="saveUserRoleInBatch" parameterType="list">
		insert into user_role
		<include refid="userRoleFiled"/>
		values
		<foreach collection="userRoles" separator="," item="item">
			<trim prefix="(" suffix=")" suffixOverrides=",">
				#{item.name,jdbcType=VARCHAR}, #{item.state,jdbcType=INTEGER},
				#{item.note,jdbcType=VARCHAR}, #{item.remark1,jdbcType=INTEGER},
				#{item.remark2,jdbcType=VARCHAR}
			</trim>
		</foreach>
	</insert>
	
	
	
	<!-- ===========================3、修改===============================  -->
	
	<!-- 根据角色id修改用户角色信息 -->
	<update id="modifyUserRoleById" parameterType="cn.zg.springcloud.entities.userCenter.UserRole">
		update user_role
		set
		<trim suffixOverrides=",">
			<if test="userRole.name != null and '' != userRole.name ">
				name =  #{ userRole.name,jdbcType=VARCHAR },
			</if>
			<if test="userRole.state != null">
				state= #{userRole.state,jdbcType=INTEGER},
			</if>
			<if test="userRole.note != null">
				note = #{userRole.note,jdbcType=VARCHAR},
			</if>
			<if test="userRole.remark1 != null">
				remark1 = #{userRole.remark1,jdbcType=INTEGER},
			</if>
			<if test="userRole.remark2 != null">
				remark2 = #{userRole.remark2,jdbcType=VARCHAR}
			</if>
		</trim>
		where rolid = #{ userRole.rolid }			
	</update>
	
	<!-- 根据角色id删除用户角色信息 -->
	<delete id="deleteUserRoleById" parameterType="int">
		delete from user_role
		where rolid = #{ rolid }	
	</delete>
	
	<!-- 根据用户id、用户角色id，增加关联关系 -->
	<insert id="saveUserAndRoleById"  parameterType="int">
		insert into user_role_relation
		( userid, rolid )
		values
		( #{userid}, #{rolid} )
	</insert>
	
	<!-- 根据用户对象、用户角色对象，增加关联关系 -->
	<insert id="saveUserAndRoleByObjects">
		insert into user_role_relation
		( userid, rolid )
		values
		( #{user.userid,jdbcType=INTEGER}, #{userRole.rolid,jdbcType=INTEGER})
	</insert>
	
	<!-- 根据用户id、用户角色id，删除关联关系 -->
	<delete id="deleteUserAndRoleById">
		delete from user_role_relation
		where userid = #{userid} and rolid = #{rolid}
	</delete>
	
	<!-- 根据用户对象、用户角色对象，删除关联关系 -->
	<delete id="deleteUserAndRoleByObjects">
		delete from user_role_relation
		where userid = #{user.userid} and rolid = #{userRole.rolid}
	</delete>
</mapper>
 

